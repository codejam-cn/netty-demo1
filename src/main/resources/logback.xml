<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

	<!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%X{out_trace_no}] [%X{INNER_TRACE_ID}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!--业务日志输出格式-->
    <property name="SERVICE_OUTPUT_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{out_trace_no}] [%X{INNER_TRACE_ID}] [%thread] %-5level %logger{56} - %msg%n"/>

    <!--SQL监控日志输出格式-->
    <property name="SQL_OUTPUT_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{out_trace_no}] [%X{INNER_TRACE_ID}] [%thread] %-5level %logger{56} - %msg%n"/>
	
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    
    <appender name="ROOT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/root.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.path}/%d{yyyy-MM-dd}/root-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="BIZ" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/biz.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.path}/%d{yyyy-MM-dd}/biz-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/error.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.path}/%d{yyyy-MM-dd}/error-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${SERVICE_OUTPUT_PATTERN}</pattern>
        </encoder>
    </appender>

    <root level="info">
        <if condition='"${log.console.open}".equals("true")'>
            <then>
                <appender-ref ref="STDOUT" />
            </then>
            <else>
                <appender-ref ref="ERROR" />
                <appender-ref ref="ROOT" />
            </else>
        </if>
    </root>
    
	<logger name="com.codejam" additivity="false">
    	<level value="${log.level}" />
    	<if condition='"${log.console.open}".equals("true")'>
            <then>
                <appender-ref ref="STDOUT" />
            </then>
            <else>
                <appender-ref ref="ERROR" />
                <appender-ref ref="BIZ" />
            </else>
        </if>
    </logger>
    

</configuration>